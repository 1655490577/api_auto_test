{"name": "登录失败", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'menuList': [{'children': [{'children': [{...}, {...}, {...}, {...}], 'icon': '', 'id': '144596599002103813', 'name':...-39a61df5f088', 'sysAdmin': {'area': '', 'areaCode': '', 'branchCode': '', 'branchId': '', ...}, 'token': '1836830285'} is None", "trace": "phone = 'admin', password = 'admin'\n\n    @allure.suite(\"测试套件2\")\n    @allure.title(\"登录失败\")  # 用例标题自定义\n    @allure.step(\"使用不同的错误账号登录系统\")  # 测试步骤描述\n    @allure.feature('测试模块02')   # 对应特性场景\n    @allure.description('登录失败测试用例')  # 对应用例里面的描述\n    @allure.testcase('http://www.baidu.com', name='点击我跳转百度')\n    @pytest.mark.parametrize('phone, password', api_date[\"login_fail\"])\n    @allure.severity('blocker')\n    def test_login_002(phone, password):\n        \"\"\"\n        用例描述：\n        参数登录失败\n        :param phone: 登录手机号\n        :param password: 登录密码\n        :return:\n        \"\"\"\n        json_date = {\n            \"password\": password,\n            \"phone\": phone,\n            \"rememberMe\": True\n        }\n        r = requests.post(url=url, json=json_date, headers=headers)\n        assert r.status_code == 200\n>       assert r.json()['data'] is None\nE       AssertionError: assert {'menuList': [{'children': [{'children': [{...}, {...}, {...}, {...}], 'icon': '', 'id': '144596599002103813', 'name':...-39a61df5f088', 'sysAdmin': {'area': '', 'areaCode': '', 'branchCode': '', 'branchId': '', ...}, 'token': '1836830285'} is None\n\ntest_case\\test_001_login.py:69: AssertionError"}, "description": "登录失败测试用例", "steps": [{"name": "使用不同的错误账号登录系统", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'menuList': [{'children': [{'children': [{...}, {...}, {...}, {...}], 'icon': '', 'id': '144596599002103813', 'name':...-39a61df5f088', 'sysAdmin': {'area': '', 'areaCode': '', 'branchCode': '', 'branchId': '', ...}, 'token': '1836830285'} is None\n", "trace": "  File \"E:\\api_auto_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\api_auto_test\\test_case\\test_001_login.py\", line 69, in test_login_002\n    assert r.json()['data'] is None\n"}, "parameters": [{"name": "phone", "value": "'admin'"}, {"name": "password", "value": "'admin'"}], "start": 1592300302415, "stop": 1592300302431}], "parameters": [{"name": "phone", "value": "'admin'"}, {"name": "password", "value": "'admin'"}], "start": 1592300302415, "stop": 1592300302446, "uuid": "52524ec6-3e3f-49ff-85ba-85b86db47f3c", "historyId": "8ae01cf693315db1ca23a3c746f56f65", "testCaseId": "7e2a4f3fb22f7082f22c15341406a5c5", "fullName": "test_case.test_001_login#test_login_002", "labels": [{"name": "feature", "value": "测试模块02"}, {"name": "suite", "value": "测试套件2"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "test_case"}, {"name": "host", "value": "DESKTOP-S9OTJ8G"}, {"name": "thread", "value": "9908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_001_login"}], "links": [{"type": "test_case", "url": "http://www.baidu.com", "name": "点击我跳转百度"}]}